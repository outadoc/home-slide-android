plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.diffplug.gradle.spotless' version '3.27.1'
}

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion target_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        applicationId "fr.outadoc.quickhass"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        // --- Versioning scheme ---
        // first two digits: targetSdkVersion
        // next three digits: versionName
        // last two digits: multi-APK variant

        versionCode 2913000
        versionName app_version_name

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
                arg("room.incremental", "true")
            }
        }
    }

    buildTypes {
        def ENABLE_DETAILS = "ENABLE_DETAILS"

        debug {
            applicationIdSuffix ".debug"
            buildConfigField "boolean", ENABLE_DETAILS, 'false'
        }

        release {
            minifyEnabled false
            buildConfigField "boolean", ENABLE_DETAILS, 'false'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility source_compatibility
        targetCompatibility source_compatibility
    }

    kotlinOptions {
        freeCompilerArgs = ["-Xallow-result-return-type", "-Xuse-experimental=kotlin.Experimental"]
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation project(':lib-mdi')
    implementation project(':lib-zeroconf')
    implementation project(':lib-restclient')
    implementation project(':lib-homeassistant-api')
    implementation project(':lib-common-util')

    implementation project(':common')
    implementation project(':feature-onboarding')
    implementation project(':feature-controlprovider')

    // Kotlin runtime
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"

    // UI libs
    implementation "com.google.android.material:material:$material_version"
    implementation "com.faltenreich:skeletonlayout:$skeleton_version"

    // Network libs
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // AndroidX libs
    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.biometric:biometric:$androidx_biometric_version"

    // AndroidX lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$androidx_nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$androidx_nav_version"

    // Preferences & persistence
    implementation "androidx.preference:preference-ktx:$androidx_preference_version"
    implementation "androidx.room:room-runtime:$kotlinx_room_version"
    implementation "androidx.room:room-ktx:$kotlinx_room_version"

    // DI
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    // Logging
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.github.ajalt:timberkt:$timberkt_version"

    // Tools
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    debugImplementation "com.github.ChuckerTeam.Chucker:library:$chucker_version"
    releaseImplementation "com.github.ChuckerTeam.Chucker:library-no-op:$chucker_version"

    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
}

spotless {
    kotlin {
        ktlint()
    }
}
